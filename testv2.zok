import "hashes/blake2/blake2s" as macHash;
from "./utils" import unflatten;
from "./v2" import main as checkJwt;

def test() -> bool {
    // eyJraWQiOiJvYWdZIn0.eyJjcmVkcyI6IlByb3RvY29sV3RmIiwiYXVkIjoiZ25vc2lzIiwicmFuZCI6IlMzS1I3WGtfUkc3R0tBYlVHQ2JiNHQ4all1UkhLVmpnc0FTeFYwME9zY1UiLCJleHAiOiIxNjUxMzY1MjUzIn0
    u32[3][16] twitterPASSJWT = [[1702447730,1633112425,1332300406,1498899546,1231958062,1702447722,1668109931,1668892982,1231831673,1647530614,1496463731,1446204013,1231648617,1498961515,1231712105,1513239926],[1664248954,1231648617,1668105845,1514359094,1231834490,1395738931,1464300646,1433101107,1378907202,1500272200,1362250345,1313362228,1634495537,1433102412,1450012782,1664108116],[1699109239,1296382330,1496405353,1279478380,1699234153,1332300152,1315591544,1299863857,1298814330,1231958144,0,0,0,0,0,1336]];
    u32[8] digest = [3061472856,343516747,3538476305,3326575927,2228721217,2069433080,3190598334,2108440221];
    u8[21] sub = [34,99,114,101,100,115,34,58,34,80,114,111,116,111,99,111,108,87,116,102,34]; //`"creds":"ProtocolWtf"`
    u8[11] subMiddle = [80,114,111,116,111,99,111,108,87,116,102];
    u8[53] subSecret = [11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63];
    u32[8] subCommitment = macHash(unflatten::<64,1>([...subMiddle, ...subSecret]));
    // Buffer.from('eyJraWQiOiJvYWdZIn0','base64').toString().length + 1 + Buffer.from('eyJjcmVkcyI6IlByb3RvY29sV3RmIiwiYXVkIjoiZ25vc2lzIiwicmFuZCI6IlMzS1I3WGtfUkc3R0tBYlVHQ2JiNHQ4all1UkhLVmpnc0FTeFYwME9zY1UiLCJleHAiOiIxNjUxMzY1MjUzIn0ï¿½','base64').toString().indexOf(`"creds":"ProtocolWtf"`)
    // = Buffer.from(header, base64).length + Buffer.from(payload).indexOf(sub)
    u32 subIdx = 1;
    //`"aud":"gnosis"`
    u32[14] aud = [34,97,117,100,34,58,34,103,110,111,115,105,115,34];
    // = Buffer.from(header, base64).length + 1 + Buffer.from(payload).indexOf(sub)
    u32 audIdx = 23;
    u8[18] exp = [34,101,120,112,34,58,34,49,54,53,49,51,54,53,50,53,51,34];
    // = Buffer.from(header, base64).length + 1 + Buffer.from(payload).indexOf(exp)
    u32 expIdx = 91;
    field expGreaterThan = 1651365252;
    field expNotGreaterThan = 1651365253;

    u32[5] malleabilityAddress = [1,2,3,69,5];

    bool a = checkJwt(twitterPASSJWT, digest, subCommitment, subSecret, subIdx, audIdx, expGreaterThan, expIdx, malleabilityAddress);
    // bool b = checkJwt(twitterPASSJWT, digest, subCommitment, subSecret, subIdx, audIdx, expNotGreaterThan, expIdx);
    // u32[14][16] googleJWT = [101,121,74,104,98,71,99,105,79,105,74,83,85,122,73,49,78,105,73,115,73,109,116,112,90,67,73,54,73,106,103,50,77,84,89,48,79,87,85,48,78,84,65,122,77,84,85,122,79,68,78,109,78,109,73,53,90,68,85,120,77,71,73,51,89,50,81,48,90,84,107,121,77,106,90,106,77,50,78,107,79,68,103,105,76,67,74,48,101,88,65,105,79,105,74,75,86,49,81,105,102,81,46,101,121,74,112,99,51,77,105,79,105,74,104,89,50,78,118,100,87,53,48,99,121,53,110,98,50,57,110,98,71,85,117,89,50,57,116,73,105,119,105,89,88,112,119,73,106,111,105,77,106,85,48,79,84,103,48,78,84,65,119,78,84,89,50,76,84,78,120,97,88,77,49,78,71,49,118,90,109,86,110,78,87,86,107,98,50,100,104,100,87,112,121,99,68,104,121,89,106,100,119,89,110,65,53,99,88,82,117,76,109,70,119,99,72,77,117,90,50,57,118,90,50,120,108,100,88,78,108,99,109,78,118,98,110,82,108,98,110,81,117,89,50,57,116,73,105,119,105,89,88,86,107,73,106,111,105,77,106,85,48,79,84,103,48,78,84,65,119,78,84,89,50,76,84,78,120,97,88,77,49,78,71,49,118,90,109,86,110,78,87,86,107,98,50,100,104,100,87,112,121,99,68,104,121,89,106,100,119,89,110,65,53,99,88,82,117,76,109,70,119,99,72,77,117,90,50,57,118,90,50,120,108,100,88,78,108,99,109,78,118,98,110,82,108,98,110,81,117,89,50,57,116,73,105,119,105,99,51,86,105,73,106,111,105,77,84,65,119,78,122,103,51,79,68,81,48,78,68,99,122,77,84,99,121,77,106,107,52,78,84,81,122,73,105,119,105,90,87,49,104,97,87,119,105,79,105,74,117,89,87,53,104,97,50,53,112,97,71,70,115,81,71,100,116,89,87,108,115,76,109,78,118,98,83,73,115,73,109,86,116,89,87,108,115,88,51,90,108,99,109,108,109,97,87,86,107,73,106,112,48,99,110,86,108,76,67,74,104,100,70,57,111,89,88,78,111,73,106,111,105,100,68,90,113,86,108,57,66,90,48,70,121,84,71,112,117,76,88,70,86,83,108,78,53,98,85,120,111,90,121,73,115,73,109,53,104,98,87,85,105,79,105,74,79,89,87,53,104,97,121,66,79,97,87,104,104,98,67,66,76,97,71,70,115,99,50,69,105,76,67,74,119,97,87,78,48,100,88,74,108,73,106,111,105,97,72,82,48,99,72,77,54,76,121,57,115,97,68,77,117,90,50,57,118,90,50,120,108,100,88,78,108,99,109,78,118,98,110,82,108,98,110,81,117,89,50,57,116,76,50,69,118,81,85,70,85,87,69,70,75,100,122,82,110,77,86,65,51,85,70,90,85,83,50,90,87,85,85,49,108,100,70,100,116,85,86,103,120,81,108,78,118,87,106,108,80,87,84,82,86,85,87,116,76,99,106,100,115,84,68,81,57,99,122,107,50,76,87,77,105,76,67,74,110,97,88,90,108,98,108,57,117,89,87,49,108,73,106,111,105,84,109,70,117,89,87,115,103,84,109,108,111,89,87,119,105,76,67,74,109,89,87,49,112,98,72,108,102,98,109,70,116,90,83,73,54,73,107,116,111,89,87,120,122,89,83,73,115,73,109,120,118,89,50,70,115,90,83,73,54,73,109,86,117,73,105,119,105,97,87,70,48,73,106,111,120,78,106,85,120,77,122,81,53,77,106,99,122,76,67,74,108,101,72,65,105,79,106,69,50,78,84,69,122,78,84,73,52,78,122,77,115,73,109,112,48,97,83,73,54,73,106,65,51,78,84,85,52,79,68,100,108,79,84,73,51,77,122,65,49,90,84,89,48,89,50,69,52,77,87,86,104,77,122,69,51,89,106,89,120,90,71,81,120,89,87,74,106,78,87,70,105,90,106,103,105,102]
    return true;
}

def main() {
    bool a = test();
   return; 
}